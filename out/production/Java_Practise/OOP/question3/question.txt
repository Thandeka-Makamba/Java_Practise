1. Create a base class Vehicle:

It should have private attributes: make (String), model (String), and year (int).
Implement Encapsulation: Provide a constructor to initialize these attributes and public "getter" methods
(getMake, getModel, getYear) for each. Do not provide setters; these details shouldn't change after creation.
Include a public method displayInfo() that prints the make, model, and year.
Include a public method startEngine() that prints a generic message like "Vehicle engine starts."

2. Create a subclass Car that extends Vehicle:

Add a private attribute: numberOfDoors (int).
Implement Encapsulation: Provide a constructor that takes make, model, year, and number of doors. It should call
the superclass constructor (super(...)) to initialize the inherited attributes and then initialize numberOfDoors.
Provide a public getter getNumberOfDoors().
Override the displayInfo() method to print the car's details, including the number of doors. It should reuse the
functionality of the base class method using super.displayInfo().
Override the startEngine() method to print "Car engine starts with a roar."

3. Create another subclass Motorcycle that extends Vehicle:

Add a private attribute: hasSidecar (boolean).
Implement Encapsulation: Provide a constructor that takes make, model, year, and whether it has a sidecar. Call
the superclass constructor and initialize hasSidecar. Provide a public getter hasSidecar().
Override the displayInfo() method to print the motorcycle's details, including whether it has a sidecar. Reuse
the base class method's functionality.
Override the startEngine() method to print "Motorcycle engine starts with a rumble."

4. Create a Garage class with a main method:

Instantiate at least one Car object and one Motorcycle object.
Demonstrate Polymorphism: Create an array or list of type Vehicle. Store the Car and Motorcycle objects in this array/list.
Iterate through the array/list and, for each Vehicle, call both the displayInfo() method and the startEngine() method.
Observe how the overridden methods in Car and Motorcycle are executed automatically.